scalar Date

directive @mapArangoCollection(collectionName: String) on OBJECT
directive @preCheck(names: [String!]) on FIELD_DEFINITION
directive @collectionAudit on OBJECT
directive @tenantScope on OBJECT
directive @hasMetadata on OBJECT
directive @mapToVariable(
  variableName: [String!]!
  canMutate: Boolean
) on FIELD_DEFINITION

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  node(id: ID!): Node
}

type Customer implements Node
  @mapArangoCollection(collectionName: "customer")
  @collectionAudit
  @tenantScope
  @hasMetadata {
  id: ID!
  firstName: String!
  lastName: String!
  gender: String!
  dateOfBirth: Date!
  email: [String!]!
  phoneNumber: [String!]!
}

type Issue implements Node
  @mapArangoCollection(collectionName: "issue")
  @collectionAudit
  @tenantScope
  @hasMetadata {
  id: ID!
  customer: [Customer!]!
  status: String!
  title: String!
  description: String!
  dueDate: Date!
  priority: Int!
  confidential: Boolean!
  locked: Boolean!
  type: String!
  assignment: [ID!]!
}

type IssueComments implements Node
  @mapArangoCollection(collectionName: "issue_comments")
  @collectionAudit
  @tenantScope
  @hasMetadata {
  id: ID!
  comment: String!
  owner: String! @mapToVariable(variableName: ["user", "id"], canMutate: false)
}

type IssueReaction implements Node
  @mapArangoCollection(collectionName: "issue_comments")
  @collectionAudit
  @tenantScope
  @hasMetadata {
  id: ID!
  reaction: String!
  owner: String! @mapToVariable(variableName: ["user", "id"], canMutate: false)
}
