env:
  # See https://github.com/redhat-actions/oc-login#readme for how to retrieve these values.
  # To get a permanent token, refer to https://github.com/redhat-actions/oc-login/wiki/Using-a-Service-Account-for-GitHub-Actions
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  APP_PORT: ""
  # Set the kube context's namespace after login
  OPENSHIFT_NAMESPACE: ${{ github.event.release.prerelease && secrets.OPENSHIFT_DEVELOPMENT_NAMESPACE || secrets.OPENSHIFT_PRODUCTION_NAMESPACE }}
  # Registries such as GHCR, Quay.io, and Docker Hub are supported.
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_REGISTRY_USER: ${{ github.actor }}
  IMAGE_REGISTRY_PASSWORD: ${{ github.token }}
  IMAGE_TAGS: ""

on:
  push:
    tags:
      - "*"

permissions:
  contents: read
  packages: write

jobs:
  test:
    uses: ./.github/workflows/tests.yml

  build:
    runs-on: ubuntu-latest
    needs:
      - test

    strategy:
      matrix:
        app: ["anthaathi-crm-web-client"]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.1.1

      - name: Install yarn packages
        run: yarn install

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build frontend with Gradle
        uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
        with:
          arguments: buildLib

      - name: Build WebApps
        uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
        with:
          arguments: :${{ matrix.app }}:buildProd

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: redhat-actions/buildah-build@v2
        id: build-image
        with:
          context: apps/${{ matrix.app }}
          dockerfiles: |
            ./Dockerfile
          image: ${{ matrix.app }}
          tags: ${{ github.event.release.prerelease && 'development' || 'latest' }} ${{ github.sha }}

      # https://github.com/redhat-actions/push-to-registry#readme
      - name: Push to registry
        id: push-image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.IMAGE_REGISTRY_USER }}
          password: ${{ env.IMAGE_REGISTRY_PASSWORD }}
