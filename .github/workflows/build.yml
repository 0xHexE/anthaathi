env:
  # See https://github.com/redhat-actions/oc-login#readme for how to retrieve these values.
  # To get a permanent token, refer to https://github.com/redhat-actions/oc-login/wiki/Using-a-Service-Account-for-GitHub-Actions
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  APP_PORT: ""
  # Registries such as GHCR, Quay.io, and Docker Hub are supported.
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_REGISTRY_USER: ${{ github.actor }}
  IMAGE_REGISTRY_PASSWORD: ${{ github.token }}
  IMAGE_TAGS: ""

on:
  release:
    types: [ published ]

permissions:
  contents: read
  packages: write

jobs:
  test:
    uses: ./.github/workflows/tests.yml

  build:
    runs-on: ubuntu-latest
    needs:
      - test

    strategy:
      matrix:
        app: ["anthaathi-crm-web-client"]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.1.1
        with:
          cache: 'yarn'

      - name: Install yarn packages
        run: yarn install

      - name: Display prerelease
        run: echo ${{ github.event.release.prerelease }}

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build frontend with Gradle
        uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
        with:
          arguments: buildLib

      - name: Build WebApps
        uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
        with:
          arguments: :apps:${{ matrix.app }}:buildProd

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: redhat-actions/buildah-build@v2
        id: build-image-dev
        if: "github.event.release.prerelease"
        with:
          context: apps/${{ matrix.app }}
          dockerfiles: |
            ./apps/${{ matrix.app }}/Dockerfile
          image: ${{ matrix.app }}
          tags: ${{ github.sha }} development

      # https://github.com/redhat-actions/push-to-registry#readme
      - name: Push to registry
        id: push-image-dev
        uses: redhat-actions/push-to-registry@v2
        if: "github.event.release.prerelease"
        with:
          image: ${{ steps.build-image-dev.outputs.image }}
          tags: ${{ steps.build-image-dev.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.IMAGE_REGISTRY_USER }}
          password: ${{ env.IMAGE_REGISTRY_PASSWORD }}

      - name: Build and push
        uses: redhat-actions/buildah-build@v2
        id: build-image-prod
        if: "!github.event.release.prerelease"
        with:
          context: apps/${{ matrix.app }}
          dockerfiles: |
            ./apps/${{ matrix.app }}/Dockerfile
          image: ${{ matrix.app }}
          tags: ${{ github.sha }} latest

      # https://github.com/redhat-actions/push-to-registry#readme
      - name: Push to registry
        if: "!github.event.release.prerelease"
        id: push-image-prod
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image-prod.outputs.image }}
          tags: ${{ steps.build-image-prod.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.IMAGE_REGISTRY_USER }}
          password: ${{ env.IMAGE_REGISTRY_PASSWORD }}

      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: 4

      # https://github.com/redhat-actions/oc-login#readme
      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        if: "github.event.release.prerelease"
        with:
          openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
          openshift_token: ${{ env.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.OPENSHIFT_NAMESPACE_DEVELOPMENT }}

      # This step should create a deployment, service, and route to run your app and expose it to the internet.
      # https://github.com/redhat-actions/oc-new-app#readme
      - name: Create and expose app
        id: deploy-and-expose-dev
        uses: redhat-actions/oc-new-app@v1
        if: "github.event.release.prerelease"
        with:
          app_name: ${{ matrix.app }}-dev
          image: ${{ steps.push-image-dev.outputs.registry-path }}
          namespace: ${{ env.OPENSHIFT_NAMESPACE_DEVELOPMENT }}
          port: ${{ env.APP_PORT }}

      - name: Print application URL
        if: "github.event.release.prerelease"
        env:
          ROUTE: ${{ steps.deploy-and-expose-dev.outputs.route }}
          SELECTOR: ${{ steps.deploy-and-expose-dev.outputs.selector }}
        run: |
          [[ -n ${{ env.ROUTE }} ]] || (echo "Determining application route failed in previous step"; exit 1)
          echo
          echo "======================== Your application is available at: ========================"
          echo ${{ env.ROUTE }}
          echo "==================================================================================="
